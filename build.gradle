plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation fabricApi.module("fabric-api-base", project.fabric_version)
	modImplementation fabricApi.module("fabric-registry-sync-v0", project.fabric_version)

	modApi include("com.github.Draylar.omega-config:omega-config-base:${project.config_version}") {
		transitive = false
	}
}


import groovy.json.JsonOutput
import groovy.json.JsonSlurper

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	doLast {

		def jsonMinifyStart = System.currentTimeMillis()
		def jsonMinified = 0
		def jsonBytesSaved = 0

		fileTree(dir: outputs.files.asPath, include: '**/*.json').each {

			File file = it
			jsonMinified++
			def oldLength = file.length()
			file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
			jsonBytesSaved += oldLength - file.length()
		}

		println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.fork = true
	options.release = 17
}

jar {
	from "LICENSE"
}
repositories {
	maven { url 'https://jitpack.io' }
}